services:
  app:
    build:
      context: .
      target: prod
    ports:
      - '4000:4000'
    environment:
      - TMDB_API_KEY=${TMDB_API_KEY}
      - DB_USERNAME=app_user
      - DB_PASSWORD=password
      - DB_MIGRATION_USER=migration_user
      - DB_MIGRATION_PASSWORD=migration_password
      - DB_HOST=db
      - DB_DATABASE_NAME=movieswithfriends
      - SESSION_KEY=${SESSION_KEY}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/go/src/app
    networks:
      - app-network

  db:
    image: postgres:17-bookworm
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=strongpassword
      - POSTGRES_DB=movieswithfriends
      - MIGRATION_USER=migration_user
      - MIGRATION_PASSWORD=migration_password
      - APP_USER=app_user
      - APP_PASSWORD=password
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U app_user -d movieswithfriends']
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - ./${VOLUME_LOCATION}:/var/lib/postgresql/data
      - ./infra/postgres/setup.sh:/docker-entrypoint-initdb.d/10_setup.sh
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
