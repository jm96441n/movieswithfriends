# Name of your application. Used to uniquely configure containers.
service: movieswithfriends

# Name of the container image.
image: jmaguireregistry/movieswithfriends

# Deploy to these servers.
servers:
  web:
    - 162.243.234.100

# Enable SSL auto certification via Let's Encrypt and allow for multiple apps on a single web server.
# Remove this section when using multiple web servers and ensure you terminate SSL at your load balancer.
#
# Note: If using Cloudflare, set encryption mode in SSL/TLS setting to "Full" to enable CF-to-app encryption.
proxy:
  ssl: true
  host: movies-with-friends.com
  app_port: 4000

registry:
  server: registry.digitalocean.com
  username: john@jmaguire.tech
  password:
    - KAMAL_REGISTRY_PASSWORD

# Configure builder setup.
builder:
  arch: amd64
  target: prod

# Inject ENV variables into containers (secrets come from .kamal/secrets).
env:
  clear:
    DB_HOST: 162.243.234.100
    DB_DATABASE_NAME: 'movieswithfriends'
  secret:
    - DB_USERNAME
    - DB_PASSWORD
    - DB_MIGRATION_USER
    - DB_MIGRATION_PASSWORD
    - SESSION_KEY
    - TMDB_API_KEY

# Aliases are triggered with "bin/kamal <alias>". You can overwrite arguments on invocation:
# "bin/kamal logs -r job" will tail logs from the first server in the job section.
#
# aliases:
#   shell: app exec --interactive --reuse "bash"

# Use a different ssh user than root
#
ssh:
  # user: app
  keys: ['~/.ssh/do']

accessories:
  dbtest:
    image: postgres:17-bookworm
    host: 162.243.234.100
  db:
    image: postgres:17-bookworm
    host: 162.243.234.100
    port: '127.0.0.1:5432:5432'
    env:
      clear:
        POSTGRES_DB: movieswithfriends
      secret:
        - POSTGRES_USER
        - POSTGRES_PASSWORD
        - APP_USER
        - APP_PASSWORD
        - MIGRATION_USER
        - MIGRATION_PASSWORD
    files:
      - ./infra/postgres/setup.sh:/docker-entrypoint-initdb.d/10_setup.sh
    directories:
      - /var/lib/postgresql/data:/var/lib/postgresql/data
#   redis:
#     image: valkey/valkey:8
#     host: 192.168.0.2
#     port: 6379
#     directories:
#       - data:/data
